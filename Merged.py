{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/diligentdinesh/Antispoof_Project/blob/main/Merged.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4aeb3dd2"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import torch\n",
        "import torch.nn as nn\n",
        "from torch.autograd import Variable\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "import torch\n",
        "import torch.nn as nn\n",
        "import torch.optim as optim\n",
        "from torch.utils.data import DataLoader, TensorDataset\n",
        "\n"
      ],
      "id": "4aeb3dd2"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Fmu83ZnKlCRP",
        "outputId": "daab47d3-2164-4440-ed39-edcbd7312053"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pennylane in /usr/local/lib/python3.10/dist-packages (0.32.0)\n",
            "Requirement already satisfied: numpy<1.24 in /usr/local/lib/python3.10/dist-packages (from pennylane) (1.23.5)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from pennylane) (1.10.1)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from pennylane) (3.1)\n",
            "Requirement already satisfied: rustworkx in /usr/local/lib/python3.10/dist-packages (from pennylane) (0.13.1)\n",
            "Requirement already satisfied: autograd<=1.5 in /usr/local/lib/python3.10/dist-packages (from pennylane) (1.5)\n",
            "Requirement already satisfied: toml in /usr/local/lib/python3.10/dist-packages (from pennylane) (0.10.2)\n",
            "Requirement already satisfied: appdirs in /usr/local/lib/python3.10/dist-packages (from pennylane) (1.4.4)\n",
            "Requirement already satisfied: semantic-version>=2.7 in /usr/local/lib/python3.10/dist-packages (from pennylane) (2.10.0)\n",
            "Requirement already satisfied: autoray>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from pennylane) (0.6.6)\n",
            "Requirement already satisfied: cachetools in /usr/local/lib/python3.10/dist-packages (from pennylane) (5.3.1)\n",
            "Requirement already satisfied: pennylane-lightning>=0.32 in /usr/local/lib/python3.10/dist-packages (from pennylane) (0.32.0)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from pennylane) (2.31.0)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from pennylane) (4.5.0)\n",
            "Requirement already satisfied: future>=0.15.2 in /usr/local/lib/python3.10/dist-packages (from autograd<=1.5->pennylane) (0.18.3)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->pennylane) (3.2.0)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->pennylane) (3.4)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->pennylane) (2.0.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->pennylane) (2023.7.22)\n"
          ]
        }
      ],
      "source": [
        "!pip install pennylane"
      ],
      "id": "Fmu83ZnKlCRP"
    },
    {
      "cell_type": "code",
      "source": [
        "import pennylane as qml"
      ],
      "metadata": {
        "id": "Rc8yaOjJFVDz"
      },
      "id": "Rc8yaOjJFVDz",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install tensorflow"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3TyQ-SuPX-Ae",
        "outputId": "455e510d-fd3a-4b84-f6a4-e1232a04b69e"
      },
      "id": "3TyQ-SuPX-Ae",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: tensorflow in /usr/local/lib/python3.10/dist-packages (2.13.0)\n",
            "Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.4.0)\n",
            "Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.6.3)\n",
            "Requirement already satisfied: flatbuffers>=23.1.21 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (23.5.26)\n",
            "Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.4.0)\n",
            "Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.2.0)\n",
            "Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.57.0)\n",
            "Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.9.0)\n",
            "Requirement already satisfied: keras<2.14,>=2.13.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.13.1)\n",
            "Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (16.0.6)\n",
            "Requirement already satisfied: numpy<=1.24.3,>=1.22 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.23.5)\n",
            "Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.3.0)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from tensorflow) (23.1)\n",
            "Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.20.3)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow) (67.7.2)\n",
            "Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.16.0)\n",
            "Requirement already satisfied: tensorboard<2.14,>=2.13 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.13.0)\n",
            "Requirement already satisfied: tensorflow-estimator<2.14,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.13.0)\n",
            "Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.3.0)\n",
            "Requirement already satisfied: typing-extensions<4.6.0,>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (4.5.0)\n",
            "Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.15.0)\n",
            "Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.33.0)\n",
            "Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow) (0.41.2)\n",
            "Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (2.17.3)\n",
            "Requirement already satisfied: google-auth-oauthlib<1.1,>=0.5 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (1.0.0)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (3.4.4)\n",
            "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (2.31.0)\n",
            "Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (0.7.1)\n",
            "Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (2.3.7)\n",
            "Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow) (5.3.1)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow) (0.3.0)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow) (4.9)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib<1.1,>=0.5->tensorboard<2.14,>=2.13->tensorflow) (1.3.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow) (3.2.0)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow) (3.4)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow) (2.0.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow) (2023.7.22)\n",
            "Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from werkzeug>=1.0.1->tensorboard<2.14,>=2.13->tensorflow) (2.1.3)\n",
            "Requirement already satisfied: pyasn1<0.6.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow) (0.5.0)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<1.1,>=0.5->tensorboard<2.14,>=2.13->tensorflow) (3.2.2)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rykvMtF8jOzN",
        "outputId": "0cf32213-f55b-441f-972b-3543b3b131a7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n"
      ],
      "id": "rykvMtF8jOzN"
    },
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf"
      ],
      "metadata": {
        "id": "R18I3e7aYp5v"
      },
      "id": "R18I3e7aYp5v",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "c8db122e"
      },
      "outputs": [],
      "source": [
        "csv_path = \"/content/drive/MyDrive/merged/lfccaldp_train.csv\"\n",
        "training_data = pd.read_csv(csv_path)"
      ],
      "id": "c8db122e"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "41740526",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 461
        },
        "outputId": "eaf13ed7-b709-4402-84e1-1e54ddc4e549"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Unnamed: 0.2  Unnamed: 0 SPEAKER_ID AUDIO_FILE_NAME SYSTEM_ID    -  \\\n",
              "0                 0           0    LA_0079    LA_T_1138215         -    -   \n",
              "1                 1           1    LA_0079    LA_T_1271820         -    -   \n",
              "2                 2           2    LA_0079    LA_T_1272637         -    -   \n",
              "3                 3           3    LA_0079    LA_T_1276960         -    -   \n",
              "4                 4           4    LA_0079    LA_T_1341447         -    -   \n",
              "...             ...         ...        ...             ...       ...  ...   \n",
              "25375         25375       25375    LA_0098    LA_T_9717580         -  A06   \n",
              "25376         25376       25376    LA_0098    LA_T_9779814         -  A06   \n",
              "25377         25377       25377    LA_0098    LA_T_9783312         -  A06   \n",
              "25378         25378       25378    LA_0098    LA_T_9839348         -  A06   \n",
              "25379         25379       25379    LA_0098    LA_T_9982036         -  A06   \n",
              "\n",
              "            KEY   FEATURE_1   FEATURE_2  FEATURE_3  ...  FEATURE_11.1  \\\n",
              "0      bonafide -149.396760   70.964210  -7.702599  ...      0.006805   \n",
              "1      bonafide -175.381160   78.296906   1.399308  ...      0.006846   \n",
              "2      bonafide -173.444000   29.728745   1.754224  ...      0.005851   \n",
              "3      bonafide -122.012520   77.409355 -10.617001  ...      0.006167   \n",
              "4      bonafide -149.022140   70.969475  16.184849  ...      0.006484   \n",
              "...         ...         ...         ...        ...  ...           ...   \n",
              "25375     spoof -116.150475   88.559830   3.352926  ...      0.006720   \n",
              "25376     spoof -128.028630  106.477690   7.579896  ...      0.007185   \n",
              "25377     spoof -159.131180   81.565010  10.799273  ...      0.006708   \n",
              "25378     spoof -149.775570   73.135810   5.457609  ...      0.007315   \n",
              "25379     spoof -187.038940   76.889275   8.026768  ...      0.006812   \n",
              "\n",
              "       FEATURE_12.1  FEATURE_13.1  FEATURE_14.1  FEATURE_15.1  FEATURE_16.1  \\\n",
              "0          0.003630      0.003085      0.002307      0.003293      0.003837   \n",
              "1          0.003308      0.002896      0.002640      0.003815      0.003298   \n",
              "2          0.003466      0.003213      0.003060      0.004072      0.003911   \n",
              "3          0.003522      0.002988      0.002972      0.003641      0.003235   \n",
              "4          0.003843      0.002769      0.002104      0.004086      0.004092   \n",
              "...             ...           ...           ...           ...           ...   \n",
              "25375      0.003440      0.002482      0.002917      0.003814      0.003231   \n",
              "25376      0.002963      0.002285      0.003563      0.003263      0.003021   \n",
              "25377      0.003254      0.002793      0.002967      0.003633      0.003286   \n",
              "25378      0.003002      0.002681      0.003551      0.003330      0.003215   \n",
              "25379      0.003492      0.002555      0.002800      0.003815      0.003482   \n",
              "\n",
              "       FEATURE_17.1  FEATURE_18.1  FEATURE_19.1  FEATURE_20.1  \n",
              "0          0.001218      0.003273      0.004997      0.007395  \n",
              "1          0.001220      0.003047      0.005245      0.006902  \n",
              "2          0.001503      0.003627      0.004946      0.005874  \n",
              "3          0.001825      0.003410      0.004398      0.007681  \n",
              "4          0.001381      0.003363      0.004648      0.007391  \n",
              "...             ...           ...           ...           ...  \n",
              "25375      0.001260      0.003236      0.005069      0.007358  \n",
              "25376      0.001172      0.002856      0.005161      0.008056  \n",
              "25377      0.001316      0.003210      0.004472      0.008045  \n",
              "25378      0.001290      0.003066      0.004912      0.007008  \n",
              "25379      0.001456      0.002731      0.004590      0.007949  \n",
              "\n",
              "[25380 rows x 53 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-96965ccf-9d2e-4239-8752-356e46a6e88a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0.2</th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>SPEAKER_ID</th>\n",
              "      <th>AUDIO_FILE_NAME</th>\n",
              "      <th>SYSTEM_ID</th>\n",
              "      <th>-</th>\n",
              "      <th>KEY</th>\n",
              "      <th>FEATURE_1</th>\n",
              "      <th>FEATURE_2</th>\n",
              "      <th>FEATURE_3</th>\n",
              "      <th>...</th>\n",
              "      <th>FEATURE_11.1</th>\n",
              "      <th>FEATURE_12.1</th>\n",
              "      <th>FEATURE_13.1</th>\n",
              "      <th>FEATURE_14.1</th>\n",
              "      <th>FEATURE_15.1</th>\n",
              "      <th>FEATURE_16.1</th>\n",
              "      <th>FEATURE_17.1</th>\n",
              "      <th>FEATURE_18.1</th>\n",
              "      <th>FEATURE_19.1</th>\n",
              "      <th>FEATURE_20.1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>LA_0079</td>\n",
              "      <td>LA_T_1138215</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>bonafide</td>\n",
              "      <td>-149.396760</td>\n",
              "      <td>70.964210</td>\n",
              "      <td>-7.702599</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006805</td>\n",
              "      <td>0.003630</td>\n",
              "      <td>0.003085</td>\n",
              "      <td>0.002307</td>\n",
              "      <td>0.003293</td>\n",
              "      <td>0.003837</td>\n",
              "      <td>0.001218</td>\n",
              "      <td>0.003273</td>\n",
              "      <td>0.004997</td>\n",
              "      <td>0.007395</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>LA_0079</td>\n",
              "      <td>LA_T_1271820</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>bonafide</td>\n",
              "      <td>-175.381160</td>\n",
              "      <td>78.296906</td>\n",
              "      <td>1.399308</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006846</td>\n",
              "      <td>0.003308</td>\n",
              "      <td>0.002896</td>\n",
              "      <td>0.002640</td>\n",
              "      <td>0.003815</td>\n",
              "      <td>0.003298</td>\n",
              "      <td>0.001220</td>\n",
              "      <td>0.003047</td>\n",
              "      <td>0.005245</td>\n",
              "      <td>0.006902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>LA_0079</td>\n",
              "      <td>LA_T_1272637</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>bonafide</td>\n",
              "      <td>-173.444000</td>\n",
              "      <td>29.728745</td>\n",
              "      <td>1.754224</td>\n",
              "      <td>...</td>\n",
              "      <td>0.005851</td>\n",
              "      <td>0.003466</td>\n",
              "      <td>0.003213</td>\n",
              "      <td>0.003060</td>\n",
              "      <td>0.004072</td>\n",
              "      <td>0.003911</td>\n",
              "      <td>0.001503</td>\n",
              "      <td>0.003627</td>\n",
              "      <td>0.004946</td>\n",
              "      <td>0.005874</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>LA_0079</td>\n",
              "      <td>LA_T_1276960</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>bonafide</td>\n",
              "      <td>-122.012520</td>\n",
              "      <td>77.409355</td>\n",
              "      <td>-10.617001</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006167</td>\n",
              "      <td>0.003522</td>\n",
              "      <td>0.002988</td>\n",
              "      <td>0.002972</td>\n",
              "      <td>0.003641</td>\n",
              "      <td>0.003235</td>\n",
              "      <td>0.001825</td>\n",
              "      <td>0.003410</td>\n",
              "      <td>0.004398</td>\n",
              "      <td>0.007681</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>LA_0079</td>\n",
              "      <td>LA_T_1341447</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>bonafide</td>\n",
              "      <td>-149.022140</td>\n",
              "      <td>70.969475</td>\n",
              "      <td>16.184849</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006484</td>\n",
              "      <td>0.003843</td>\n",
              "      <td>0.002769</td>\n",
              "      <td>0.002104</td>\n",
              "      <td>0.004086</td>\n",
              "      <td>0.004092</td>\n",
              "      <td>0.001381</td>\n",
              "      <td>0.003363</td>\n",
              "      <td>0.004648</td>\n",
              "      <td>0.007391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25375</th>\n",
              "      <td>25375</td>\n",
              "      <td>25375</td>\n",
              "      <td>LA_0098</td>\n",
              "      <td>LA_T_9717580</td>\n",
              "      <td>-</td>\n",
              "      <td>A06</td>\n",
              "      <td>spoof</td>\n",
              "      <td>-116.150475</td>\n",
              "      <td>88.559830</td>\n",
              "      <td>3.352926</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006720</td>\n",
              "      <td>0.003440</td>\n",
              "      <td>0.002482</td>\n",
              "      <td>0.002917</td>\n",
              "      <td>0.003814</td>\n",
              "      <td>0.003231</td>\n",
              "      <td>0.001260</td>\n",
              "      <td>0.003236</td>\n",
              "      <td>0.005069</td>\n",
              "      <td>0.007358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25376</th>\n",
              "      <td>25376</td>\n",
              "      <td>25376</td>\n",
              "      <td>LA_0098</td>\n",
              "      <td>LA_T_9779814</td>\n",
              "      <td>-</td>\n",
              "      <td>A06</td>\n",
              "      <td>spoof</td>\n",
              "      <td>-128.028630</td>\n",
              "      <td>106.477690</td>\n",
              "      <td>7.579896</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007185</td>\n",
              "      <td>0.002963</td>\n",
              "      <td>0.002285</td>\n",
              "      <td>0.003563</td>\n",
              "      <td>0.003263</td>\n",
              "      <td>0.003021</td>\n",
              "      <td>0.001172</td>\n",
              "      <td>0.002856</td>\n",
              "      <td>0.005161</td>\n",
              "      <td>0.008056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25377</th>\n",
              "      <td>25377</td>\n",
              "      <td>25377</td>\n",
              "      <td>LA_0098</td>\n",
              "      <td>LA_T_9783312</td>\n",
              "      <td>-</td>\n",
              "      <td>A06</td>\n",
              "      <td>spoof</td>\n",
              "      <td>-159.131180</td>\n",
              "      <td>81.565010</td>\n",
              "      <td>10.799273</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006708</td>\n",
              "      <td>0.003254</td>\n",
              "      <td>0.002793</td>\n",
              "      <td>0.002967</td>\n",
              "      <td>0.003633</td>\n",
              "      <td>0.003286</td>\n",
              "      <td>0.001316</td>\n",
              "      <td>0.003210</td>\n",
              "      <td>0.004472</td>\n",
              "      <td>0.008045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25378</th>\n",
              "      <td>25378</td>\n",
              "      <td>25378</td>\n",
              "      <td>LA_0098</td>\n",
              "      <td>LA_T_9839348</td>\n",
              "      <td>-</td>\n",
              "      <td>A06</td>\n",
              "      <td>spoof</td>\n",
              "      <td>-149.775570</td>\n",
              "      <td>73.135810</td>\n",
              "      <td>5.457609</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007315</td>\n",
              "      <td>0.003002</td>\n",
              "      <td>0.002681</td>\n",
              "      <td>0.003551</td>\n",
              "      <td>0.003330</td>\n",
              "      <td>0.003215</td>\n",
              "      <td>0.001290</td>\n",
              "      <td>0.003066</td>\n",
              "      <td>0.004912</td>\n",
              "      <td>0.007008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25379</th>\n",
              "      <td>25379</td>\n",
              "      <td>25379</td>\n",
              "      <td>LA_0098</td>\n",
              "      <td>LA_T_9982036</td>\n",
              "      <td>-</td>\n",
              "      <td>A06</td>\n",
              "      <td>spoof</td>\n",
              "      <td>-187.038940</td>\n",
              "      <td>76.889275</td>\n",
              "      <td>8.026768</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006812</td>\n",
              "      <td>0.003492</td>\n",
              "      <td>0.002555</td>\n",
              "      <td>0.002800</td>\n",
              "      <td>0.003815</td>\n",
              "      <td>0.003482</td>\n",
              "      <td>0.001456</td>\n",
              "      <td>0.002731</td>\n",
              "      <td>0.004590</td>\n",
              "      <td>0.007949</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>25380 rows × 53 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96965ccf-9d2e-4239-8752-356e46a6e88a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-96965ccf-9d2e-4239-8752-356e46a6e88a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-96965ccf-9d2e-4239-8752-356e46a6e88a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a8a8f343-809d-4689-8891-8d073da01bb9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8a8f343-809d-4689-8891-8d073da01bb9')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a8a8f343-809d-4689-8891-8d073da01bb9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "training_data"
      ],
      "id": "41740526"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "N4EpmlPG3kL2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "85ccb7af-a501-477c-d097-ccbc72f7188f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Unnamed: 0.2', 'Unnamed: 0', 'SPEAKER_ID', 'AUDIO_FILE_NAME',\n",
              "       'SYSTEM_ID', '-', 'KEY', 'FEATURE_1', 'FEATURE_2', 'FEATURE_3',\n",
              "       'FEATURE_4', 'FEATURE_5', 'FEATURE_6', 'FEATURE_7', 'FEATURE_8',\n",
              "       'FEATURE_9', 'FEATURE_10', 'FEATURE_11', 'FEATURE_12', 'FEATURE_13',\n",
              "       'FEATURE_14', 'FEATURE_15', 'FEATURE_16', 'FEATURE_17', 'FEATURE_18',\n",
              "       'FEATURE_19', 'FEATURE_20', 'Unnamed: 0.1', 'SPEAKER_ID.1',\n",
              "       'AUDIO_FILE_NAME.1', 'SYSTEM_ID.1', '-.1', 'KEY.1', 'FEATURE_1.1',\n",
              "       'FEATURE_2.1', 'FEATURE_3.1', 'FEATURE_4.1', 'FEATURE_5.1',\n",
              "       'FEATURE_6.1', 'FEATURE_7.1', 'FEATURE_8.1', 'FEATURE_9.1',\n",
              "       'FEATURE_10.1', 'FEATURE_11.1', 'FEATURE_12.1', 'FEATURE_13.1',\n",
              "       'FEATURE_14.1', 'FEATURE_15.1', 'FEATURE_16.1', 'FEATURE_17.1',\n",
              "       'FEATURE_18.1', 'FEATURE_19.1', 'FEATURE_20.1'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "training_data.columns"
      ],
      "id": "N4EpmlPG3kL2"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "c75f66e4"
      },
      "outputs": [],
      "source": [
        "training_data0 = training_data.iloc[:, 6:27]\n",
        "training_data1=training_data.iloc[:, 33:53]\n",
        "training_data=pd.concat([training_data0,training_data1],axis=1,ignore_index=False)"
      ],
      "id": "c75f66e4"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "c72f163b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e2f6e20c-4151-41ce-a017-5fde25b78842"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['KEY', 'FEATURE_1', 'FEATURE_2', 'FEATURE_3', 'FEATURE_4', 'FEATURE_5',\n",
              "       'FEATURE_6', 'FEATURE_7', 'FEATURE_8', 'FEATURE_9', 'FEATURE_10',\n",
              "       'FEATURE_11', 'FEATURE_12', 'FEATURE_13', 'FEATURE_14', 'FEATURE_15',\n",
              "       'FEATURE_16', 'FEATURE_17', 'FEATURE_18', 'FEATURE_19', 'FEATURE_20',\n",
              "       'FEATURE_1.1', 'FEATURE_2.1', 'FEATURE_3.1', 'FEATURE_4.1',\n",
              "       'FEATURE_5.1', 'FEATURE_6.1', 'FEATURE_7.1', 'FEATURE_8.1',\n",
              "       'FEATURE_9.1', 'FEATURE_10.1', 'FEATURE_11.1', 'FEATURE_12.1',\n",
              "       'FEATURE_13.1', 'FEATURE_14.1', 'FEATURE_15.1', 'FEATURE_16.1',\n",
              "       'FEATURE_17.1', 'FEATURE_18.1', 'FEATURE_19.1', 'FEATURE_20.1'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "training_data.columns"
      ],
      "id": "c72f163b"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "f3a4223a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "outputId": "74646c8f-688d-427b-b2b4-d02a9757e5c7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       KEY   FEATURE_1   FEATURE_2  FEATURE_3  FEATURE_4  FEATURE_5  \\\n",
              "0        0 -149.396760   70.964210  -7.702599   6.443213  17.937560   \n",
              "1        0 -175.381160   78.296906   1.399308   9.789186  11.184879   \n",
              "2        0 -173.444000   29.728745   1.754224   5.202226  10.229509   \n",
              "3        0 -122.012520   77.409355 -10.617001   9.335879  26.299517   \n",
              "4        0 -149.022140   70.969475  16.184849  17.258858  17.094664   \n",
              "...    ...         ...         ...        ...        ...        ...   \n",
              "25375    1 -116.150475   88.559830   3.352926  26.672749  10.725180   \n",
              "25376    1 -128.028630  106.477690   7.579896  27.968746   8.234107   \n",
              "25377    1 -159.131180   81.565010  10.799273  17.893496   9.717772   \n",
              "25378    1 -149.775570   73.135810   5.457609  23.919252  12.919068   \n",
              "25379    1 -187.038940   76.889275   8.026768  19.131361  12.368436   \n",
              "\n",
              "       FEATURE_6  FEATURE_7  FEATURE_8  FEATURE_9  ...  FEATURE_11.1  \\\n",
              "0       7.696656  -3.312907   3.165033  -4.183246  ...      0.006805   \n",
              "1       3.753437  -1.132373   5.470942   2.867387  ...      0.006846   \n",
              "2       8.230701   0.651034   8.891239   5.574694  ...      0.005851   \n",
              "3      18.757545   4.828253   4.714666  -1.970630  ...      0.006167   \n",
              "4       7.199579  -5.078539  -0.368632   1.326642  ...      0.006484   \n",
              "...          ...        ...        ...        ...  ...           ...   \n",
              "25375  18.004330   1.455958  12.507888   1.238729  ...      0.006720   \n",
              "25376  25.543016   3.433657  13.952384  -0.482688  ...      0.007185   \n",
              "25377  18.009258   1.529796  13.998129   1.019138  ...      0.006708   \n",
              "25378  25.969599   7.793699  17.766550   6.478211  ...      0.007315   \n",
              "25379  20.175213   3.702926  13.336054   1.920937  ...      0.006812   \n",
              "\n",
              "       FEATURE_12.1  FEATURE_13.1  FEATURE_14.1  FEATURE_15.1  FEATURE_16.1  \\\n",
              "0          0.003630      0.003085      0.002307      0.003293      0.003837   \n",
              "1          0.003308      0.002896      0.002640      0.003815      0.003298   \n",
              "2          0.003466      0.003213      0.003060      0.004072      0.003911   \n",
              "3          0.003522      0.002988      0.002972      0.003641      0.003235   \n",
              "4          0.003843      0.002769      0.002104      0.004086      0.004092   \n",
              "...             ...           ...           ...           ...           ...   \n",
              "25375      0.003440      0.002482      0.002917      0.003814      0.003231   \n",
              "25376      0.002963      0.002285      0.003563      0.003263      0.003021   \n",
              "25377      0.003254      0.002793      0.002967      0.003633      0.003286   \n",
              "25378      0.003002      0.002681      0.003551      0.003330      0.003215   \n",
              "25379      0.003492      0.002555      0.002800      0.003815      0.003482   \n",
              "\n",
              "       FEATURE_17.1  FEATURE_18.1  FEATURE_19.1  FEATURE_20.1  \n",
              "0          0.001218      0.003273      0.004997      0.007395  \n",
              "1          0.001220      0.003047      0.005245      0.006902  \n",
              "2          0.001503      0.003627      0.004946      0.005874  \n",
              "3          0.001825      0.003410      0.004398      0.007681  \n",
              "4          0.001381      0.003363      0.004648      0.007391  \n",
              "...             ...           ...           ...           ...  \n",
              "25375      0.001260      0.003236      0.005069      0.007358  \n",
              "25376      0.001172      0.002856      0.005161      0.008056  \n",
              "25377      0.001316      0.003210      0.004472      0.008045  \n",
              "25378      0.001290      0.003066      0.004912      0.007008  \n",
              "25379      0.001456      0.002731      0.004590      0.007949  \n",
              "\n",
              "[25380 rows x 41 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bf15cfdf-a474-44c2-9188-8cae9fe9884c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>KEY</th>\n",
              "      <th>FEATURE_1</th>\n",
              "      <th>FEATURE_2</th>\n",
              "      <th>FEATURE_3</th>\n",
              "      <th>FEATURE_4</th>\n",
              "      <th>FEATURE_5</th>\n",
              "      <th>FEATURE_6</th>\n",
              "      <th>FEATURE_7</th>\n",
              "      <th>FEATURE_8</th>\n",
              "      <th>FEATURE_9</th>\n",
              "      <th>...</th>\n",
              "      <th>FEATURE_11.1</th>\n",
              "      <th>FEATURE_12.1</th>\n",
              "      <th>FEATURE_13.1</th>\n",
              "      <th>FEATURE_14.1</th>\n",
              "      <th>FEATURE_15.1</th>\n",
              "      <th>FEATURE_16.1</th>\n",
              "      <th>FEATURE_17.1</th>\n",
              "      <th>FEATURE_18.1</th>\n",
              "      <th>FEATURE_19.1</th>\n",
              "      <th>FEATURE_20.1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>-149.396760</td>\n",
              "      <td>70.964210</td>\n",
              "      <td>-7.702599</td>\n",
              "      <td>6.443213</td>\n",
              "      <td>17.937560</td>\n",
              "      <td>7.696656</td>\n",
              "      <td>-3.312907</td>\n",
              "      <td>3.165033</td>\n",
              "      <td>-4.183246</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006805</td>\n",
              "      <td>0.003630</td>\n",
              "      <td>0.003085</td>\n",
              "      <td>0.002307</td>\n",
              "      <td>0.003293</td>\n",
              "      <td>0.003837</td>\n",
              "      <td>0.001218</td>\n",
              "      <td>0.003273</td>\n",
              "      <td>0.004997</td>\n",
              "      <td>0.007395</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>-175.381160</td>\n",
              "      <td>78.296906</td>\n",
              "      <td>1.399308</td>\n",
              "      <td>9.789186</td>\n",
              "      <td>11.184879</td>\n",
              "      <td>3.753437</td>\n",
              "      <td>-1.132373</td>\n",
              "      <td>5.470942</td>\n",
              "      <td>2.867387</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006846</td>\n",
              "      <td>0.003308</td>\n",
              "      <td>0.002896</td>\n",
              "      <td>0.002640</td>\n",
              "      <td>0.003815</td>\n",
              "      <td>0.003298</td>\n",
              "      <td>0.001220</td>\n",
              "      <td>0.003047</td>\n",
              "      <td>0.005245</td>\n",
              "      <td>0.006902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>-173.444000</td>\n",
              "      <td>29.728745</td>\n",
              "      <td>1.754224</td>\n",
              "      <td>5.202226</td>\n",
              "      <td>10.229509</td>\n",
              "      <td>8.230701</td>\n",
              "      <td>0.651034</td>\n",
              "      <td>8.891239</td>\n",
              "      <td>5.574694</td>\n",
              "      <td>...</td>\n",
              "      <td>0.005851</td>\n",
              "      <td>0.003466</td>\n",
              "      <td>0.003213</td>\n",
              "      <td>0.003060</td>\n",
              "      <td>0.004072</td>\n",
              "      <td>0.003911</td>\n",
              "      <td>0.001503</td>\n",
              "      <td>0.003627</td>\n",
              "      <td>0.004946</td>\n",
              "      <td>0.005874</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>-122.012520</td>\n",
              "      <td>77.409355</td>\n",
              "      <td>-10.617001</td>\n",
              "      <td>9.335879</td>\n",
              "      <td>26.299517</td>\n",
              "      <td>18.757545</td>\n",
              "      <td>4.828253</td>\n",
              "      <td>4.714666</td>\n",
              "      <td>-1.970630</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006167</td>\n",
              "      <td>0.003522</td>\n",
              "      <td>0.002988</td>\n",
              "      <td>0.002972</td>\n",
              "      <td>0.003641</td>\n",
              "      <td>0.003235</td>\n",
              "      <td>0.001825</td>\n",
              "      <td>0.003410</td>\n",
              "      <td>0.004398</td>\n",
              "      <td>0.007681</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>-149.022140</td>\n",
              "      <td>70.969475</td>\n",
              "      <td>16.184849</td>\n",
              "      <td>17.258858</td>\n",
              "      <td>17.094664</td>\n",
              "      <td>7.199579</td>\n",
              "      <td>-5.078539</td>\n",
              "      <td>-0.368632</td>\n",
              "      <td>1.326642</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006484</td>\n",
              "      <td>0.003843</td>\n",
              "      <td>0.002769</td>\n",
              "      <td>0.002104</td>\n",
              "      <td>0.004086</td>\n",
              "      <td>0.004092</td>\n",
              "      <td>0.001381</td>\n",
              "      <td>0.003363</td>\n",
              "      <td>0.004648</td>\n",
              "      <td>0.007391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25375</th>\n",
              "      <td>1</td>\n",
              "      <td>-116.150475</td>\n",
              "      <td>88.559830</td>\n",
              "      <td>3.352926</td>\n",
              "      <td>26.672749</td>\n",
              "      <td>10.725180</td>\n",
              "      <td>18.004330</td>\n",
              "      <td>1.455958</td>\n",
              "      <td>12.507888</td>\n",
              "      <td>1.238729</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006720</td>\n",
              "      <td>0.003440</td>\n",
              "      <td>0.002482</td>\n",
              "      <td>0.002917</td>\n",
              "      <td>0.003814</td>\n",
              "      <td>0.003231</td>\n",
              "      <td>0.001260</td>\n",
              "      <td>0.003236</td>\n",
              "      <td>0.005069</td>\n",
              "      <td>0.007358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25376</th>\n",
              "      <td>1</td>\n",
              "      <td>-128.028630</td>\n",
              "      <td>106.477690</td>\n",
              "      <td>7.579896</td>\n",
              "      <td>27.968746</td>\n",
              "      <td>8.234107</td>\n",
              "      <td>25.543016</td>\n",
              "      <td>3.433657</td>\n",
              "      <td>13.952384</td>\n",
              "      <td>-0.482688</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007185</td>\n",
              "      <td>0.002963</td>\n",
              "      <td>0.002285</td>\n",
              "      <td>0.003563</td>\n",
              "      <td>0.003263</td>\n",
              "      <td>0.003021</td>\n",
              "      <td>0.001172</td>\n",
              "      <td>0.002856</td>\n",
              "      <td>0.005161</td>\n",
              "      <td>0.008056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25377</th>\n",
              "      <td>1</td>\n",
              "      <td>-159.131180</td>\n",
              "      <td>81.565010</td>\n",
              "      <td>10.799273</td>\n",
              "      <td>17.893496</td>\n",
              "      <td>9.717772</td>\n",
              "      <td>18.009258</td>\n",
              "      <td>1.529796</td>\n",
              "      <td>13.998129</td>\n",
              "      <td>1.019138</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006708</td>\n",
              "      <td>0.003254</td>\n",
              "      <td>0.002793</td>\n",
              "      <td>0.002967</td>\n",
              "      <td>0.003633</td>\n",
              "      <td>0.003286</td>\n",
              "      <td>0.001316</td>\n",
              "      <td>0.003210</td>\n",
              "      <td>0.004472</td>\n",
              "      <td>0.008045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25378</th>\n",
              "      <td>1</td>\n",
              "      <td>-149.775570</td>\n",
              "      <td>73.135810</td>\n",
              "      <td>5.457609</td>\n",
              "      <td>23.919252</td>\n",
              "      <td>12.919068</td>\n",
              "      <td>25.969599</td>\n",
              "      <td>7.793699</td>\n",
              "      <td>17.766550</td>\n",
              "      <td>6.478211</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007315</td>\n",
              "      <td>0.003002</td>\n",
              "      <td>0.002681</td>\n",
              "      <td>0.003551</td>\n",
              "      <td>0.003330</td>\n",
              "      <td>0.003215</td>\n",
              "      <td>0.001290</td>\n",
              "      <td>0.003066</td>\n",
              "      <td>0.004912</td>\n",
              "      <td>0.007008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25379</th>\n",
              "      <td>1</td>\n",
              "      <td>-187.038940</td>\n",
              "      <td>76.889275</td>\n",
              "      <td>8.026768</td>\n",
              "      <td>19.131361</td>\n",
              "      <td>12.368436</td>\n",
              "      <td>20.175213</td>\n",
              "      <td>3.702926</td>\n",
              "      <td>13.336054</td>\n",
              "      <td>1.920937</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006812</td>\n",
              "      <td>0.003492</td>\n",
              "      <td>0.002555</td>\n",
              "      <td>0.002800</td>\n",
              "      <td>0.003815</td>\n",
              "      <td>0.003482</td>\n",
              "      <td>0.001456</td>\n",
              "      <td>0.002731</td>\n",
              "      <td>0.004590</td>\n",
              "      <td>0.007949</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>25380 rows × 41 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf15cfdf-a474-44c2-9188-8cae9fe9884c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bf15cfdf-a474-44c2-9188-8cae9fe9884c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bf15cfdf-a474-44c2-9188-8cae9fe9884c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d257f0b5-6e44-4a0c-b559-f96dee7be598\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d257f0b5-6e44-4a0c-b559-f96dee7be598')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d257f0b5-6e44-4a0c-b559-f96dee7be598 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "label_encoder = LabelEncoder()\n",
        "training_data['KEY'] = label_encoder.fit_transform(training_data['KEY'])\n",
        "training_data"
      ],
      "id": "f3a4223a"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5c330e75",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "outputId": "0516fd48-4daa-49ec-80a5-1900f1df6105"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       KEY  FEATURE_1   FEATURE_2  FEATURE_3  FEATURE_4  FEATURE_5  FEATURE_6  \\\n",
              "0        0 -187.74802   72.810646  22.276161  12.051105   9.500827  15.906523   \n",
              "1        0 -178.53287   55.323124  16.097528   8.657491   6.769091   6.607699   \n",
              "2        0 -207.94019   61.757122   8.424240   4.374812  13.825693  18.283200   \n",
              "3        0 -133.87695   62.559770  13.263299   6.021475   7.071392  14.716262   \n",
              "4        0 -170.30989   65.951126  25.321112   7.235177  14.619024   8.403874   \n",
              "...    ...        ...         ...        ...        ...        ...        ...   \n",
              "24839    1 -222.41179   83.687240  26.580534  22.755068  15.787957  20.680283   \n",
              "24840    1  -78.71716   95.560960   1.585534  18.576777  14.570734  18.578648   \n",
              "24841    1 -150.08864   74.005490  11.673433  19.604944  14.650037  20.231363   \n",
              "24842    1 -132.96230  103.704520  11.326039  10.299434  11.284040  14.856290   \n",
              "24843    1 -178.70496   81.928530  25.819010  26.371592  10.136105  20.639140   \n",
              "\n",
              "       FEATURE_7  FEATURE_8  FEATURE_9  ...  FEATURE_11.1  FEATURE_12.1  \\\n",
              "0       1.999959   9.458947   8.838546  ...      0.006428      0.003459   \n",
              "1      -1.514294  14.243628  12.149686  ...      0.005740      0.004208   \n",
              "2       5.072211  14.882036   5.873123  ...      0.006683      0.003847   \n",
              "3       2.458434  13.602588  15.453843  ...      0.006229      0.003646   \n",
              "4      13.995754  18.828026   6.500879  ...      0.007142      0.003290   \n",
              "...          ...        ...        ...  ...           ...           ...   \n",
              "24839  -0.928242  11.521843  -0.234940  ...      0.007030      0.003433   \n",
              "24840  -4.149070  19.835672  -2.011897  ...      0.006593      0.003303   \n",
              "24841   3.495995  15.302449   2.457114  ...      0.007093      0.003108   \n",
              "24842  -7.781762  10.304425  -2.748501  ...      0.006587      0.003913   \n",
              "24843  -5.333297   7.711584  -4.061847  ...      0.006769      0.003472   \n",
              "\n",
              "       FEATURE_13.1  FEATURE_14.1  FEATURE_15.1  FEATURE_16.1  FEATURE_17.1  \\\n",
              "0          0.002635      0.003006      0.003603      0.003570      0.001402   \n",
              "1          0.003050      0.002308      0.004106      0.003813      0.001491   \n",
              "2          0.002692      0.002966      0.003718      0.003164      0.001223   \n",
              "3          0.003063      0.003076      0.003381      0.003320      0.001617   \n",
              "4          0.002114      0.003077      0.003183      0.003036      0.001227   \n",
              "...             ...           ...           ...           ...           ...   \n",
              "24839      0.002180      0.003316      0.003693      0.003342      0.001324   \n",
              "24840      0.002968      0.002667      0.003528      0.003511      0.001225   \n",
              "24841      0.002607      0.003371      0.003772      0.003309      0.001429   \n",
              "24842      0.002611      0.002403      0.004128      0.003692      0.001351   \n",
              "24843      0.002172      0.002854      0.003653      0.003697      0.001307   \n",
              "\n",
              "       FEATURE_18.1  FEATURE_19.1  FEATURE_20.1  \n",
              "0          0.003096      0.004939      0.007545  \n",
              "1          0.003554      0.005005      0.006407  \n",
              "2          0.002563      0.005091      0.007893  \n",
              "3          0.003410      0.004383      0.007716  \n",
              "4          0.003148      0.005064      0.008247  \n",
              "...             ...           ...           ...  \n",
              "24839      0.002562      0.004732      0.008069  \n",
              "24840      0.003341      0.004982      0.007407  \n",
              "24841      0.002914      0.004587      0.007651  \n",
              "24842      0.002992      0.004675      0.007487  \n",
              "24843      0.002949      0.005019      0.007633  \n",
              "\n",
              "[24844 rows x 41 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-162bbbc2-1fca-498d-a13d-68acfe5e9d7b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>KEY</th>\n",
              "      <th>FEATURE_1</th>\n",
              "      <th>FEATURE_2</th>\n",
              "      <th>FEATURE_3</th>\n",
              "      <th>FEATURE_4</th>\n",
              "      <th>FEATURE_5</th>\n",
              "      <th>FEATURE_6</th>\n",
              "      <th>FEATURE_7</th>\n",
              "      <th>FEATURE_8</th>\n",
              "      <th>FEATURE_9</th>\n",
              "      <th>...</th>\n",
              "      <th>FEATURE_11.1</th>\n",
              "      <th>FEATURE_12.1</th>\n",
              "      <th>FEATURE_13.1</th>\n",
              "      <th>FEATURE_14.1</th>\n",
              "      <th>FEATURE_15.1</th>\n",
              "      <th>FEATURE_16.1</th>\n",
              "      <th>FEATURE_17.1</th>\n",
              "      <th>FEATURE_18.1</th>\n",
              "      <th>FEATURE_19.1</th>\n",
              "      <th>FEATURE_20.1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>-187.74802</td>\n",
              "      <td>72.810646</td>\n",
              "      <td>22.276161</td>\n",
              "      <td>12.051105</td>\n",
              "      <td>9.500827</td>\n",
              "      <td>15.906523</td>\n",
              "      <td>1.999959</td>\n",
              "      <td>9.458947</td>\n",
              "      <td>8.838546</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006428</td>\n",
              "      <td>0.003459</td>\n",
              "      <td>0.002635</td>\n",
              "      <td>0.003006</td>\n",
              "      <td>0.003603</td>\n",
              "      <td>0.003570</td>\n",
              "      <td>0.001402</td>\n",
              "      <td>0.003096</td>\n",
              "      <td>0.004939</td>\n",
              "      <td>0.007545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>-178.53287</td>\n",
              "      <td>55.323124</td>\n",
              "      <td>16.097528</td>\n",
              "      <td>8.657491</td>\n",
              "      <td>6.769091</td>\n",
              "      <td>6.607699</td>\n",
              "      <td>-1.514294</td>\n",
              "      <td>14.243628</td>\n",
              "      <td>12.149686</td>\n",
              "      <td>...</td>\n",
              "      <td>0.005740</td>\n",
              "      <td>0.004208</td>\n",
              "      <td>0.003050</td>\n",
              "      <td>0.002308</td>\n",
              "      <td>0.004106</td>\n",
              "      <td>0.003813</td>\n",
              "      <td>0.001491</td>\n",
              "      <td>0.003554</td>\n",
              "      <td>0.005005</td>\n",
              "      <td>0.006407</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>-207.94019</td>\n",
              "      <td>61.757122</td>\n",
              "      <td>8.424240</td>\n",
              "      <td>4.374812</td>\n",
              "      <td>13.825693</td>\n",
              "      <td>18.283200</td>\n",
              "      <td>5.072211</td>\n",
              "      <td>14.882036</td>\n",
              "      <td>5.873123</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006683</td>\n",
              "      <td>0.003847</td>\n",
              "      <td>0.002692</td>\n",
              "      <td>0.002966</td>\n",
              "      <td>0.003718</td>\n",
              "      <td>0.003164</td>\n",
              "      <td>0.001223</td>\n",
              "      <td>0.002563</td>\n",
              "      <td>0.005091</td>\n",
              "      <td>0.007893</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>-133.87695</td>\n",
              "      <td>62.559770</td>\n",
              "      <td>13.263299</td>\n",
              "      <td>6.021475</td>\n",
              "      <td>7.071392</td>\n",
              "      <td>14.716262</td>\n",
              "      <td>2.458434</td>\n",
              "      <td>13.602588</td>\n",
              "      <td>15.453843</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006229</td>\n",
              "      <td>0.003646</td>\n",
              "      <td>0.003063</td>\n",
              "      <td>0.003076</td>\n",
              "      <td>0.003381</td>\n",
              "      <td>0.003320</td>\n",
              "      <td>0.001617</td>\n",
              "      <td>0.003410</td>\n",
              "      <td>0.004383</td>\n",
              "      <td>0.007716</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>-170.30989</td>\n",
              "      <td>65.951126</td>\n",
              "      <td>25.321112</td>\n",
              "      <td>7.235177</td>\n",
              "      <td>14.619024</td>\n",
              "      <td>8.403874</td>\n",
              "      <td>13.995754</td>\n",
              "      <td>18.828026</td>\n",
              "      <td>6.500879</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007142</td>\n",
              "      <td>0.003290</td>\n",
              "      <td>0.002114</td>\n",
              "      <td>0.003077</td>\n",
              "      <td>0.003183</td>\n",
              "      <td>0.003036</td>\n",
              "      <td>0.001227</td>\n",
              "      <td>0.003148</td>\n",
              "      <td>0.005064</td>\n",
              "      <td>0.008247</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24839</th>\n",
              "      <td>1</td>\n",
              "      <td>-222.41179</td>\n",
              "      <td>83.687240</td>\n",
              "      <td>26.580534</td>\n",
              "      <td>22.755068</td>\n",
              "      <td>15.787957</td>\n",
              "      <td>20.680283</td>\n",
              "      <td>-0.928242</td>\n",
              "      <td>11.521843</td>\n",
              "      <td>-0.234940</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007030</td>\n",
              "      <td>0.003433</td>\n",
              "      <td>0.002180</td>\n",
              "      <td>0.003316</td>\n",
              "      <td>0.003693</td>\n",
              "      <td>0.003342</td>\n",
              "      <td>0.001324</td>\n",
              "      <td>0.002562</td>\n",
              "      <td>0.004732</td>\n",
              "      <td>0.008069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24840</th>\n",
              "      <td>1</td>\n",
              "      <td>-78.71716</td>\n",
              "      <td>95.560960</td>\n",
              "      <td>1.585534</td>\n",
              "      <td>18.576777</td>\n",
              "      <td>14.570734</td>\n",
              "      <td>18.578648</td>\n",
              "      <td>-4.149070</td>\n",
              "      <td>19.835672</td>\n",
              "      <td>-2.011897</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006593</td>\n",
              "      <td>0.003303</td>\n",
              "      <td>0.002968</td>\n",
              "      <td>0.002667</td>\n",
              "      <td>0.003528</td>\n",
              "      <td>0.003511</td>\n",
              "      <td>0.001225</td>\n",
              "      <td>0.003341</td>\n",
              "      <td>0.004982</td>\n",
              "      <td>0.007407</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24841</th>\n",
              "      <td>1</td>\n",
              "      <td>-150.08864</td>\n",
              "      <td>74.005490</td>\n",
              "      <td>11.673433</td>\n",
              "      <td>19.604944</td>\n",
              "      <td>14.650037</td>\n",
              "      <td>20.231363</td>\n",
              "      <td>3.495995</td>\n",
              "      <td>15.302449</td>\n",
              "      <td>2.457114</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007093</td>\n",
              "      <td>0.003108</td>\n",
              "      <td>0.002607</td>\n",
              "      <td>0.003371</td>\n",
              "      <td>0.003772</td>\n",
              "      <td>0.003309</td>\n",
              "      <td>0.001429</td>\n",
              "      <td>0.002914</td>\n",
              "      <td>0.004587</td>\n",
              "      <td>0.007651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24842</th>\n",
              "      <td>1</td>\n",
              "      <td>-132.96230</td>\n",
              "      <td>103.704520</td>\n",
              "      <td>11.326039</td>\n",
              "      <td>10.299434</td>\n",
              "      <td>11.284040</td>\n",
              "      <td>14.856290</td>\n",
              "      <td>-7.781762</td>\n",
              "      <td>10.304425</td>\n",
              "      <td>-2.748501</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006587</td>\n",
              "      <td>0.003913</td>\n",
              "      <td>0.002611</td>\n",
              "      <td>0.002403</td>\n",
              "      <td>0.004128</td>\n",
              "      <td>0.003692</td>\n",
              "      <td>0.001351</td>\n",
              "      <td>0.002992</td>\n",
              "      <td>0.004675</td>\n",
              "      <td>0.007487</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24843</th>\n",
              "      <td>1</td>\n",
              "      <td>-178.70496</td>\n",
              "      <td>81.928530</td>\n",
              "      <td>25.819010</td>\n",
              "      <td>26.371592</td>\n",
              "      <td>10.136105</td>\n",
              "      <td>20.639140</td>\n",
              "      <td>-5.333297</td>\n",
              "      <td>7.711584</td>\n",
              "      <td>-4.061847</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006769</td>\n",
              "      <td>0.003472</td>\n",
              "      <td>0.002172</td>\n",
              "      <td>0.002854</td>\n",
              "      <td>0.003653</td>\n",
              "      <td>0.003697</td>\n",
              "      <td>0.001307</td>\n",
              "      <td>0.002949</td>\n",
              "      <td>0.005019</td>\n",
              "      <td>0.007633</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>24844 rows × 41 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-162bbbc2-1fca-498d-a13d-68acfe5e9d7b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-162bbbc2-1fca-498d-a13d-68acfe5e9d7b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-162bbbc2-1fca-498d-a13d-68acfe5e9d7b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bc264728-b204-455a-815c-4d1f86503696\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bc264728-b204-455a-815c-4d1f86503696')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bc264728-b204-455a-815c-4d1f86503696 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "csv_path = \"/content/drive/MyDrive/merged/lfccaldp_dev.csv\"\n",
        "val_data = pd.read_csv(csv_path)\n",
        "val_data0 = val_data.iloc[:, 6:27]\n",
        "val_data1=val_data.iloc[:, 33:53]\n",
        "val_data=pd.concat([val_data0,val_data1],axis=1,ignore_index=False)\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "label_encoder = LabelEncoder()\n",
        "val_data['KEY'] = label_encoder.fit_transform(val_data['KEY'])\n",
        "val_data"
      ],
      "id": "5c330e75"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8b24c096"
      },
      "outputs": [],
      "source": [
        "training_data=pd.concat([training_data,val_data],axis=0,ignore_index=True)"
      ],
      "id": "8b24c096"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "a76d16f3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "outputId": "d5c40dbc-1789-4888-ff36-902eb3fd65c8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       KEY  FEATURE_1   FEATURE_2  FEATURE_3  FEATURE_4  FEATURE_5  FEATURE_6  \\\n",
              "0        0 -149.39676   70.964210  -7.702599   6.443213  17.937560   7.696656   \n",
              "1        0 -175.38116   78.296906   1.399308   9.789186  11.184879   3.753437   \n",
              "2        0 -173.44400   29.728745   1.754224   5.202226  10.229509   8.230701   \n",
              "3        0 -122.01252   77.409355 -10.617001   9.335879  26.299517  18.757545   \n",
              "4        0 -149.02214   70.969475  16.184849  17.258858  17.094664   7.199579   \n",
              "...    ...        ...         ...        ...        ...        ...        ...   \n",
              "50219    1 -222.41179   83.687240  26.580534  22.755068  15.787957  20.680283   \n",
              "50220    1  -78.71716   95.560960   1.585534  18.576777  14.570734  18.578648   \n",
              "50221    1 -150.08864   74.005490  11.673433  19.604944  14.650037  20.231363   \n",
              "50222    1 -132.96230  103.704520  11.326039  10.299434  11.284040  14.856290   \n",
              "50223    1 -178.70496   81.928530  25.819010  26.371592  10.136105  20.639140   \n",
              "\n",
              "       FEATURE_7  FEATURE_8  FEATURE_9  ...  FEATURE_11.1  FEATURE_12.1  \\\n",
              "0      -3.312907   3.165033  -4.183246  ...      0.006805      0.003630   \n",
              "1      -1.132373   5.470942   2.867387  ...      0.006846      0.003308   \n",
              "2       0.651034   8.891239   5.574694  ...      0.005851      0.003466   \n",
              "3       4.828253   4.714666  -1.970630  ...      0.006167      0.003522   \n",
              "4      -5.078539  -0.368632   1.326642  ...      0.006484      0.003843   \n",
              "...          ...        ...        ...  ...           ...           ...   \n",
              "50219  -0.928242  11.521843  -0.234940  ...      0.007030      0.003433   \n",
              "50220  -4.149070  19.835672  -2.011897  ...      0.006593      0.003303   \n",
              "50221   3.495995  15.302449   2.457114  ...      0.007093      0.003108   \n",
              "50222  -7.781762  10.304425  -2.748501  ...      0.006587      0.003913   \n",
              "50223  -5.333297   7.711584  -4.061847  ...      0.006769      0.003472   \n",
              "\n",
              "       FEATURE_13.1  FEATURE_14.1  FEATURE_15.1  FEATURE_16.1  FEATURE_17.1  \\\n",
              "0          0.003085      0.002307      0.003293      0.003837      0.001218   \n",
              "1          0.002896      0.002640      0.003815      0.003298      0.001220   \n",
              "2          0.003213      0.003060      0.004072      0.003911      0.001503   \n",
              "3          0.002988      0.002972      0.003641      0.003235      0.001825   \n",
              "4          0.002769      0.002104      0.004086      0.004092      0.001381   \n",
              "...             ...           ...           ...           ...           ...   \n",
              "50219      0.002180      0.003316      0.003693      0.003342      0.001324   \n",
              "50220      0.002968      0.002667      0.003528      0.003511      0.001225   \n",
              "50221      0.002607      0.003371      0.003772      0.003309      0.001429   \n",
              "50222      0.002611      0.002403      0.004128      0.003692      0.001351   \n",
              "50223      0.002172      0.002854      0.003653      0.003697      0.001307   \n",
              "\n",
              "       FEATURE_18.1  FEATURE_19.1  FEATURE_20.1  \n",
              "0          0.003273      0.004997      0.007395  \n",
              "1          0.003047      0.005245      0.006902  \n",
              "2          0.003627      0.004946      0.005874  \n",
              "3          0.003410      0.004398      0.007681  \n",
              "4          0.003363      0.004648      0.007391  \n",
              "...             ...           ...           ...  \n",
              "50219      0.002562      0.004732      0.008069  \n",
              "50220      0.003341      0.004982      0.007407  \n",
              "50221      0.002914      0.004587      0.007651  \n",
              "50222      0.002992      0.004675      0.007487  \n",
              "50223      0.002949      0.005019      0.007633  \n",
              "\n",
              "[50224 rows x 41 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2de296eb-476d-419e-9506-38171dd47a48\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>KEY</th>\n",
              "      <th>FEATURE_1</th>\n",
              "      <th>FEATURE_2</th>\n",
              "      <th>FEATURE_3</th>\n",
              "      <th>FEATURE_4</th>\n",
              "      <th>FEATURE_5</th>\n",
              "      <th>FEATURE_6</th>\n",
              "      <th>FEATURE_7</th>\n",
              "      <th>FEATURE_8</th>\n",
              "      <th>FEATURE_9</th>\n",
              "      <th>...</th>\n",
              "      <th>FEATURE_11.1</th>\n",
              "      <th>FEATURE_12.1</th>\n",
              "      <th>FEATURE_13.1</th>\n",
              "      <th>FEATURE_14.1</th>\n",
              "      <th>FEATURE_15.1</th>\n",
              "      <th>FEATURE_16.1</th>\n",
              "      <th>FEATURE_17.1</th>\n",
              "      <th>FEATURE_18.1</th>\n",
              "      <th>FEATURE_19.1</th>\n",
              "      <th>FEATURE_20.1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>-149.39676</td>\n",
              "      <td>70.964210</td>\n",
              "      <td>-7.702599</td>\n",
              "      <td>6.443213</td>\n",
              "      <td>17.937560</td>\n",
              "      <td>7.696656</td>\n",
              "      <td>-3.312907</td>\n",
              "      <td>3.165033</td>\n",
              "      <td>-4.183246</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006805</td>\n",
              "      <td>0.003630</td>\n",
              "      <td>0.003085</td>\n",
              "      <td>0.002307</td>\n",
              "      <td>0.003293</td>\n",
              "      <td>0.003837</td>\n",
              "      <td>0.001218</td>\n",
              "      <td>0.003273</td>\n",
              "      <td>0.004997</td>\n",
              "      <td>0.007395</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>-175.38116</td>\n",
              "      <td>78.296906</td>\n",
              "      <td>1.399308</td>\n",
              "      <td>9.789186</td>\n",
              "      <td>11.184879</td>\n",
              "      <td>3.753437</td>\n",
              "      <td>-1.132373</td>\n",
              "      <td>5.470942</td>\n",
              "      <td>2.867387</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006846</td>\n",
              "      <td>0.003308</td>\n",
              "      <td>0.002896</td>\n",
              "      <td>0.002640</td>\n",
              "      <td>0.003815</td>\n",
              "      <td>0.003298</td>\n",
              "      <td>0.001220</td>\n",
              "      <td>0.003047</td>\n",
              "      <td>0.005245</td>\n",
              "      <td>0.006902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>-173.44400</td>\n",
              "      <td>29.728745</td>\n",
              "      <td>1.754224</td>\n",
              "      <td>5.202226</td>\n",
              "      <td>10.229509</td>\n",
              "      <td>8.230701</td>\n",
              "      <td>0.651034</td>\n",
              "      <td>8.891239</td>\n",
              "      <td>5.574694</td>\n",
              "      <td>...</td>\n",
              "      <td>0.005851</td>\n",
              "      <td>0.003466</td>\n",
              "      <td>0.003213</td>\n",
              "      <td>0.003060</td>\n",
              "      <td>0.004072</td>\n",
              "      <td>0.003911</td>\n",
              "      <td>0.001503</td>\n",
              "      <td>0.003627</td>\n",
              "      <td>0.004946</td>\n",
              "      <td>0.005874</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>-122.01252</td>\n",
              "      <td>77.409355</td>\n",
              "      <td>-10.617001</td>\n",
              "      <td>9.335879</td>\n",
              "      <td>26.299517</td>\n",
              "      <td>18.757545</td>\n",
              "      <td>4.828253</td>\n",
              "      <td>4.714666</td>\n",
              "      <td>-1.970630</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006167</td>\n",
              "      <td>0.003522</td>\n",
              "      <td>0.002988</td>\n",
              "      <td>0.002972</td>\n",
              "      <td>0.003641</td>\n",
              "      <td>0.003235</td>\n",
              "      <td>0.001825</td>\n",
              "      <td>0.003410</td>\n",
              "      <td>0.004398</td>\n",
              "      <td>0.007681</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>-149.02214</td>\n",
              "      <td>70.969475</td>\n",
              "      <td>16.184849</td>\n",
              "      <td>17.258858</td>\n",
              "      <td>17.094664</td>\n",
              "      <td>7.199579</td>\n",
              "      <td>-5.078539</td>\n",
              "      <td>-0.368632</td>\n",
              "      <td>1.326642</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006484</td>\n",
              "      <td>0.003843</td>\n",
              "      <td>0.002769</td>\n",
              "      <td>0.002104</td>\n",
              "      <td>0.004086</td>\n",
              "      <td>0.004092</td>\n",
              "      <td>0.001381</td>\n",
              "      <td>0.003363</td>\n",
              "      <td>0.004648</td>\n",
              "      <td>0.007391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50219</th>\n",
              "      <td>1</td>\n",
              "      <td>-222.41179</td>\n",
              "      <td>83.687240</td>\n",
              "      <td>26.580534</td>\n",
              "      <td>22.755068</td>\n",
              "      <td>15.787957</td>\n",
              "      <td>20.680283</td>\n",
              "      <td>-0.928242</td>\n",
              "      <td>11.521843</td>\n",
              "      <td>-0.234940</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007030</td>\n",
              "      <td>0.003433</td>\n",
              "      <td>0.002180</td>\n",
              "      <td>0.003316</td>\n",
              "      <td>0.003693</td>\n",
              "      <td>0.003342</td>\n",
              "      <td>0.001324</td>\n",
              "      <td>0.002562</td>\n",
              "      <td>0.004732</td>\n",
              "      <td>0.008069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50220</th>\n",
              "      <td>1</td>\n",
              "      <td>-78.71716</td>\n",
              "      <td>95.560960</td>\n",
              "      <td>1.585534</td>\n",
              "      <td>18.576777</td>\n",
              "      <td>14.570734</td>\n",
              "      <td>18.578648</td>\n",
              "      <td>-4.149070</td>\n",
              "      <td>19.835672</td>\n",
              "      <td>-2.011897</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006593</td>\n",
              "      <td>0.003303</td>\n",
              "      <td>0.002968</td>\n",
              "      <td>0.002667</td>\n",
              "      <td>0.003528</td>\n",
              "      <td>0.003511</td>\n",
              "      <td>0.001225</td>\n",
              "      <td>0.003341</td>\n",
              "      <td>0.004982</td>\n",
              "      <td>0.007407</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50221</th>\n",
              "      <td>1</td>\n",
              "      <td>-150.08864</td>\n",
              "      <td>74.005490</td>\n",
              "      <td>11.673433</td>\n",
              "      <td>19.604944</td>\n",
              "      <td>14.650037</td>\n",
              "      <td>20.231363</td>\n",
              "      <td>3.495995</td>\n",
              "      <td>15.302449</td>\n",
              "      <td>2.457114</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007093</td>\n",
              "      <td>0.003108</td>\n",
              "      <td>0.002607</td>\n",
              "      <td>0.003371</td>\n",
              "      <td>0.003772</td>\n",
              "      <td>0.003309</td>\n",
              "      <td>0.001429</td>\n",
              "      <td>0.002914</td>\n",
              "      <td>0.004587</td>\n",
              "      <td>0.007651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50222</th>\n",
              "      <td>1</td>\n",
              "      <td>-132.96230</td>\n",
              "      <td>103.704520</td>\n",
              "      <td>11.326039</td>\n",
              "      <td>10.299434</td>\n",
              "      <td>11.284040</td>\n",
              "      <td>14.856290</td>\n",
              "      <td>-7.781762</td>\n",
              "      <td>10.304425</td>\n",
              "      <td>-2.748501</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006587</td>\n",
              "      <td>0.003913</td>\n",
              "      <td>0.002611</td>\n",
              "      <td>0.002403</td>\n",
              "      <td>0.004128</td>\n",
              "      <td>0.003692</td>\n",
              "      <td>0.001351</td>\n",
              "      <td>0.002992</td>\n",
              "      <td>0.004675</td>\n",
              "      <td>0.007487</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50223</th>\n",
              "      <td>1</td>\n",
              "      <td>-178.70496</td>\n",
              "      <td>81.928530</td>\n",
              "      <td>25.819010</td>\n",
              "      <td>26.371592</td>\n",
              "      <td>10.136105</td>\n",
              "      <td>20.639140</td>\n",
              "      <td>-5.333297</td>\n",
              "      <td>7.711584</td>\n",
              "      <td>-4.061847</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006769</td>\n",
              "      <td>0.003472</td>\n",
              "      <td>0.002172</td>\n",
              "      <td>0.002854</td>\n",
              "      <td>0.003653</td>\n",
              "      <td>0.003697</td>\n",
              "      <td>0.001307</td>\n",
              "      <td>0.002949</td>\n",
              "      <td>0.005019</td>\n",
              "      <td>0.007633</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50224 rows × 41 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2de296eb-476d-419e-9506-38171dd47a48')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2de296eb-476d-419e-9506-38171dd47a48 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2de296eb-476d-419e-9506-38171dd47a48');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-37b24d07-bd72-4f46-8a7a-32b593ca1ebe\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37b24d07-bd72-4f46-8a7a-32b593ca1ebe')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-37b24d07-bd72-4f46-8a7a-32b593ca1ebe button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "training_data"
      ],
      "id": "a76d16f3"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "425444d3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "outputId": "6a7726d9-be58-4a52-8117-01173c2b01eb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       KEY   FEATURE_1   FEATURE_2  FEATURE_3  FEATURE_4  FEATURE_5  \\\n",
              "0        1  -43.469814  123.771740  13.786643  10.194767  19.499681   \n",
              "1        1 -150.367230  133.030000  -7.366740   0.608287  32.553272   \n",
              "2        1 -138.735470   97.758580  15.921655  17.925327   5.091560   \n",
              "3        1 -140.685440  143.450320  21.982351 -12.966956  26.714903   \n",
              "4        1  -28.609789   82.698010  21.144096  13.415313  24.167646   \n",
              "...    ...         ...         ...        ...        ...        ...   \n",
              "71232    0 -249.013930   88.306620   3.185362   9.570959  26.625350   \n",
              "71233    1 -116.308850  108.885550  27.713093  -0.807691  12.992973   \n",
              "71234    1  -82.215500   86.005806  -3.357752  35.201168  -5.370068   \n",
              "71235    0 -108.385574   84.555440 -24.765335   7.349175  20.283020   \n",
              "71236    1 -127.385940   88.808014   7.081621  25.895107  14.747127   \n",
              "\n",
              "       FEATURE_6  FEATURE_7  FEATURE_8  FEATURE_9  ...  FEATURE_11.1  \\\n",
              "0      16.347372  16.704868  16.378582   1.201868  ...      0.008833   \n",
              "1       6.541215  -4.734227   0.091479  -1.163852  ...      0.008123   \n",
              "2      26.747597   3.169286  11.595394  -0.129352  ...      0.007369   \n",
              "3      15.788480  -1.600981  21.435400  12.541205  ...      0.009354   \n",
              "4      18.743073  -2.906243  15.707408   6.840194  ...      0.007913   \n",
              "...          ...        ...        ...        ...  ...           ...   \n",
              "71232   0.637393   7.728429  10.851454   6.232036  ...      0.007248   \n",
              "71233  34.830887   8.739379  13.638993  15.983159  ...      0.008659   \n",
              "71234  16.927237  -8.915095   4.616626  -1.101877  ...      0.006750   \n",
              "71235  17.678785  13.793136  18.386362  16.283730  ...      0.005975   \n",
              "71236  19.479042   3.215547  12.148848   2.009520  ...      0.007569   \n",
              "\n",
              "       FEATURE_12.1  FEATURE_13.1  FEATURE_14.1  FEATURE_15.1  FEATURE_16.1  \\\n",
              "0          0.002748      0.002655      0.002841      0.002515      0.002903   \n",
              "1          0.003441      0.002234      0.001723      0.003312      0.003767   \n",
              "2          0.003237      0.002967      0.003180      0.003109      0.002953   \n",
              "3          0.002507      0.001934      0.001855      0.002237      0.002552   \n",
              "4          0.002757      0.002380      0.002924      0.002871      0.002764   \n",
              "...             ...           ...           ...           ...           ...   \n",
              "71232      0.003407      0.002410      0.002742      0.003647      0.003416   \n",
              "71233      0.002638      0.002757      0.002477      0.002446      0.002904   \n",
              "71234      0.003142      0.002536      0.002811      0.003417      0.003159   \n",
              "71235      0.003299      0.002585      0.003402      0.003651      0.003163   \n",
              "71236      0.002822      0.002477      0.002986      0.003134      0.003429   \n",
              "\n",
              "       FEATURE_17.1  FEATURE_18.1  FEATURE_19.1  FEATURE_20.1  \n",
              "0          0.000931      0.002530      0.005325      0.008088  \n",
              "1          0.001061      0.002998      0.005170      0.007853  \n",
              "2          0.001051      0.002939      0.005367      0.007198  \n",
              "3          0.000922      0.002057      0.005206      0.010591  \n",
              "4          0.001848      0.002821      0.005065      0.007871  \n",
              "...             ...           ...           ...           ...  \n",
              "71232      0.000859      0.002594      0.004847      0.008670  \n",
              "71233      0.001028      0.002952      0.005313      0.008043  \n",
              "71234      0.001537      0.002845      0.005241      0.007777  \n",
              "71235      0.001508      0.002874      0.005295      0.007772  \n",
              "71236      0.001241      0.002789      0.004277      0.008958  \n",
              "\n",
              "[71237 rows x 41 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e5a4b4f7-8660-4fd9-8b6f-9f2ea8c9438b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>KEY</th>\n",
              "      <th>FEATURE_1</th>\n",
              "      <th>FEATURE_2</th>\n",
              "      <th>FEATURE_3</th>\n",
              "      <th>FEATURE_4</th>\n",
              "      <th>FEATURE_5</th>\n",
              "      <th>FEATURE_6</th>\n",
              "      <th>FEATURE_7</th>\n",
              "      <th>FEATURE_8</th>\n",
              "      <th>FEATURE_9</th>\n",
              "      <th>...</th>\n",
              "      <th>FEATURE_11.1</th>\n",
              "      <th>FEATURE_12.1</th>\n",
              "      <th>FEATURE_13.1</th>\n",
              "      <th>FEATURE_14.1</th>\n",
              "      <th>FEATURE_15.1</th>\n",
              "      <th>FEATURE_16.1</th>\n",
              "      <th>FEATURE_17.1</th>\n",
              "      <th>FEATURE_18.1</th>\n",
              "      <th>FEATURE_19.1</th>\n",
              "      <th>FEATURE_20.1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>-43.469814</td>\n",
              "      <td>123.771740</td>\n",
              "      <td>13.786643</td>\n",
              "      <td>10.194767</td>\n",
              "      <td>19.499681</td>\n",
              "      <td>16.347372</td>\n",
              "      <td>16.704868</td>\n",
              "      <td>16.378582</td>\n",
              "      <td>1.201868</td>\n",
              "      <td>...</td>\n",
              "      <td>0.008833</td>\n",
              "      <td>0.002748</td>\n",
              "      <td>0.002655</td>\n",
              "      <td>0.002841</td>\n",
              "      <td>0.002515</td>\n",
              "      <td>0.002903</td>\n",
              "      <td>0.000931</td>\n",
              "      <td>0.002530</td>\n",
              "      <td>0.005325</td>\n",
              "      <td>0.008088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>-150.367230</td>\n",
              "      <td>133.030000</td>\n",
              "      <td>-7.366740</td>\n",
              "      <td>0.608287</td>\n",
              "      <td>32.553272</td>\n",
              "      <td>6.541215</td>\n",
              "      <td>-4.734227</td>\n",
              "      <td>0.091479</td>\n",
              "      <td>-1.163852</td>\n",
              "      <td>...</td>\n",
              "      <td>0.008123</td>\n",
              "      <td>0.003441</td>\n",
              "      <td>0.002234</td>\n",
              "      <td>0.001723</td>\n",
              "      <td>0.003312</td>\n",
              "      <td>0.003767</td>\n",
              "      <td>0.001061</td>\n",
              "      <td>0.002998</td>\n",
              "      <td>0.005170</td>\n",
              "      <td>0.007853</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>-138.735470</td>\n",
              "      <td>97.758580</td>\n",
              "      <td>15.921655</td>\n",
              "      <td>17.925327</td>\n",
              "      <td>5.091560</td>\n",
              "      <td>26.747597</td>\n",
              "      <td>3.169286</td>\n",
              "      <td>11.595394</td>\n",
              "      <td>-0.129352</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007369</td>\n",
              "      <td>0.003237</td>\n",
              "      <td>0.002967</td>\n",
              "      <td>0.003180</td>\n",
              "      <td>0.003109</td>\n",
              "      <td>0.002953</td>\n",
              "      <td>0.001051</td>\n",
              "      <td>0.002939</td>\n",
              "      <td>0.005367</td>\n",
              "      <td>0.007198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>-140.685440</td>\n",
              "      <td>143.450320</td>\n",
              "      <td>21.982351</td>\n",
              "      <td>-12.966956</td>\n",
              "      <td>26.714903</td>\n",
              "      <td>15.788480</td>\n",
              "      <td>-1.600981</td>\n",
              "      <td>21.435400</td>\n",
              "      <td>12.541205</td>\n",
              "      <td>...</td>\n",
              "      <td>0.009354</td>\n",
              "      <td>0.002507</td>\n",
              "      <td>0.001934</td>\n",
              "      <td>0.001855</td>\n",
              "      <td>0.002237</td>\n",
              "      <td>0.002552</td>\n",
              "      <td>0.000922</td>\n",
              "      <td>0.002057</td>\n",
              "      <td>0.005206</td>\n",
              "      <td>0.010591</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>-28.609789</td>\n",
              "      <td>82.698010</td>\n",
              "      <td>21.144096</td>\n",
              "      <td>13.415313</td>\n",
              "      <td>24.167646</td>\n",
              "      <td>18.743073</td>\n",
              "      <td>-2.906243</td>\n",
              "      <td>15.707408</td>\n",
              "      <td>6.840194</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007913</td>\n",
              "      <td>0.002757</td>\n",
              "      <td>0.002380</td>\n",
              "      <td>0.002924</td>\n",
              "      <td>0.002871</td>\n",
              "      <td>0.002764</td>\n",
              "      <td>0.001848</td>\n",
              "      <td>0.002821</td>\n",
              "      <td>0.005065</td>\n",
              "      <td>0.007871</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71232</th>\n",
              "      <td>0</td>\n",
              "      <td>-249.013930</td>\n",
              "      <td>88.306620</td>\n",
              "      <td>3.185362</td>\n",
              "      <td>9.570959</td>\n",
              "      <td>26.625350</td>\n",
              "      <td>0.637393</td>\n",
              "      <td>7.728429</td>\n",
              "      <td>10.851454</td>\n",
              "      <td>6.232036</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007248</td>\n",
              "      <td>0.003407</td>\n",
              "      <td>0.002410</td>\n",
              "      <td>0.002742</td>\n",
              "      <td>0.003647</td>\n",
              "      <td>0.003416</td>\n",
              "      <td>0.000859</td>\n",
              "      <td>0.002594</td>\n",
              "      <td>0.004847</td>\n",
              "      <td>0.008670</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71233</th>\n",
              "      <td>1</td>\n",
              "      <td>-116.308850</td>\n",
              "      <td>108.885550</td>\n",
              "      <td>27.713093</td>\n",
              "      <td>-0.807691</td>\n",
              "      <td>12.992973</td>\n",
              "      <td>34.830887</td>\n",
              "      <td>8.739379</td>\n",
              "      <td>13.638993</td>\n",
              "      <td>15.983159</td>\n",
              "      <td>...</td>\n",
              "      <td>0.008659</td>\n",
              "      <td>0.002638</td>\n",
              "      <td>0.002757</td>\n",
              "      <td>0.002477</td>\n",
              "      <td>0.002446</td>\n",
              "      <td>0.002904</td>\n",
              "      <td>0.001028</td>\n",
              "      <td>0.002952</td>\n",
              "      <td>0.005313</td>\n",
              "      <td>0.008043</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71234</th>\n",
              "      <td>1</td>\n",
              "      <td>-82.215500</td>\n",
              "      <td>86.005806</td>\n",
              "      <td>-3.357752</td>\n",
              "      <td>35.201168</td>\n",
              "      <td>-5.370068</td>\n",
              "      <td>16.927237</td>\n",
              "      <td>-8.915095</td>\n",
              "      <td>4.616626</td>\n",
              "      <td>-1.101877</td>\n",
              "      <td>...</td>\n",
              "      <td>0.006750</td>\n",
              "      <td>0.003142</td>\n",
              "      <td>0.002536</td>\n",
              "      <td>0.002811</td>\n",
              "      <td>0.003417</td>\n",
              "      <td>0.003159</td>\n",
              "      <td>0.001537</td>\n",
              "      <td>0.002845</td>\n",
              "      <td>0.005241</td>\n",
              "      <td>0.007777</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71235</th>\n",
              "      <td>0</td>\n",
              "      <td>-108.385574</td>\n",
              "      <td>84.555440</td>\n",
              "      <td>-24.765335</td>\n",
              "      <td>7.349175</td>\n",
              "      <td>20.283020</td>\n",
              "      <td>17.678785</td>\n",
              "      <td>13.793136</td>\n",
              "      <td>18.386362</td>\n",
              "      <td>16.283730</td>\n",
              "      <td>...</td>\n",
              "      <td>0.005975</td>\n",
              "      <td>0.003299</td>\n",
              "      <td>0.002585</td>\n",
              "      <td>0.003402</td>\n",
              "      <td>0.003651</td>\n",
              "      <td>0.003163</td>\n",
              "      <td>0.001508</td>\n",
              "      <td>0.002874</td>\n",
              "      <td>0.005295</td>\n",
              "      <td>0.007772</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71236</th>\n",
              "      <td>1</td>\n",
              "      <td>-127.385940</td>\n",
              "      <td>88.808014</td>\n",
              "      <td>7.081621</td>\n",
              "      <td>25.895107</td>\n",
              "      <td>14.747127</td>\n",
              "      <td>19.479042</td>\n",
              "      <td>3.215547</td>\n",
              "      <td>12.148848</td>\n",
              "      <td>2.009520</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007569</td>\n",
              "      <td>0.002822</td>\n",
              "      <td>0.002477</td>\n",
              "      <td>0.002986</td>\n",
              "      <td>0.003134</td>\n",
              "      <td>0.003429</td>\n",
              "      <td>0.001241</td>\n",
              "      <td>0.002789</td>\n",
              "      <td>0.004277</td>\n",
              "      <td>0.008958</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>71237 rows × 41 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5a4b4f7-8660-4fd9-8b6f-9f2ea8c9438b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e5a4b4f7-8660-4fd9-8b6f-9f2ea8c9438b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e5a4b4f7-8660-4fd9-8b6f-9f2ea8c9438b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d7e83524-a0d2-42f2-8aa5-c6af1df20002\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d7e83524-a0d2-42f2-8aa5-c6af1df20002')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d7e83524-a0d2-42f2-8aa5-c6af1df20002 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "csv_path = \"/content/drive/MyDrive/merged/lfccaldp_eval.csv\"\n",
        "test_data = pd.read_csv(csv_path)\n",
        "test_data0 = test_data.iloc[:, 6:27]\n",
        "test_data1=test_data.iloc[:, 33:53]\n",
        "test_data=pd.concat([test_data0,test_data1],axis=1,ignore_index=False)\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "label_encoder = LabelEncoder()\n",
        "test_data['KEY'] = label_encoder.fit_transform(test_data['KEY'])\n",
        "test_data"
      ],
      "id": "425444d3"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3e89fff3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cc9b838f-fd53-4a0e-9e50-0346a985e76a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(50224, 40)"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "X_train = training_data.iloc[:, 1:41]\n",
        "X_train.shape\n"
      ],
      "id": "3e89fff3"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7cf7b749",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "66513bea-f5e6-4ce0-af2f-45f53059ad3d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(50224,)"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ],
      "source": [
        "y_train = training_data.iloc[:, 0]\n",
        "y_train.shape"
      ],
      "id": "7cf7b749"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "d60c45cc"
      },
      "outputs": [],
      "source": [
        "X_val = val_data.iloc[:, 1:41]\n",
        "y_val = val_data.iloc[:, 0]"
      ],
      "id": "d60c45cc"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "710707e6"
      },
      "outputs": [],
      "source": [
        "X_test = val_data.iloc[:, 1:41]\n",
        "y_test = val_data.iloc[:, 0]"
      ],
      "id": "710707e6"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "a4aa7309"
      },
      "outputs": [],
      "source": [
        "X_train = torch.tensor(X_train.values)\n",
        "y_train = torch.tensor(y_train.values)\n",
        "X_val = torch.tensor(X_val.values)\n",
        "y_val = torch.tensor(y_val.values)\n",
        "X_test = torch.tensor(X_test.values)\n",
        "y_test = torch.tensor(y_test.values)"
      ],
      "id": "a4aa7309"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "84b7da27",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c63540de-17a1-4035-dd68-42b0bcb4a755"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "torch.float64"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ],
      "source": [
        "X_train.dtype"
      ],
      "id": "84b7da27"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "302a62f7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0a59671e-fd41-4279-ed99-51b820f32cbd"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "device(type='cuda')"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
        "device"
      ],
      "id": "302a62f7"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0f89d6e0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d95c79e7-703c-403d-c0b7-6d81043c6fc0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-24-3f1a28193c99>:1: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n",
            "  X_train = torch.tensor(X_train, dtype=torch.float32)\n",
            "<ipython-input-24-3f1a28193c99>:2: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n",
            "  y_train= torch.tensor(y_train, dtype=torch.float32)\n",
            "<ipython-input-24-3f1a28193c99>:3: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n",
            "  X_test= torch.tensor(X_test, dtype=torch.float32)\n",
            "<ipython-input-24-3f1a28193c99>:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n",
            "  y_test= torch.tensor(y_test, dtype=torch.float32)\n"
          ]
        }
      ],
      "source": [
        "X_train = torch.tensor(X_train, dtype=torch.float32)\n",
        "y_train= torch.tensor(y_train, dtype=torch.float32)\n",
        "X_test= torch.tensor(X_test, dtype=torch.float32)\n",
        "y_test= torch.tensor(y_test, dtype=torch.float32)"
      ],
      "id": "0f89d6e0"
    },
    {
      "cell_type": "code",
      "source": [
        "n_qubits =4          # Number of qubits\n",
        "num_epochs =15          # Number of training epochs\n",
        "q_depth =1               # Depth of the quantum circuit (number of variational layers)\n",
        "gamma_lr_scheduler = 0.1    # Learning rate reduction applied every 10 epochs.\n",
        "q_delta = 0.1              # Initial spread of random quantum weights\n"
      ],
      "metadata": {
        "id": "VBENWAFEFbS1"
      },
      "id": "VBENWAFEFbS1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dev = qml.device(\"default.qubit\", wires=n_qubits)"
      ],
      "metadata": {
        "id": "7yxrcyDOEQVo"
      },
      "id": "7yxrcyDOEQVo",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def H_layer(nqubits):\n",
        "    \"\"\"Layer of single-qubit Hadamard gates.\n",
        "    \"\"\"\n",
        "    for idx in range(nqubits):\n",
        "        qml.Hadamard(wires=idx)\n",
        "\n",
        "\n",
        "def RY_layer(w):\n",
        "    \"\"\"Layer of parametrized qubit rotations around the y axis.\n",
        "    \"\"\"\n",
        "    for idx, element in enumerate(w):\n",
        "        qml.RY(element, wires=idx)\n",
        "\n",
        "\n",
        "def entangling_layer(nqubits):\n",
        "  for i in range(0, nqubits - 1, 2):\n",
        "    qml.CNOT(wires=[i, i + 1])\n",
        "  for i in range(1, nqubits - 1, 2):\n",
        "    qml.CNOT(wires=[i, i + 1])"
      ],
      "metadata": {
        "id": "hRQLmSWJCTL9"
      },
      "id": "hRQLmSWJCTL9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "@qml.qnode(dev,interface=\"torch\")\n",
        "def quantum_net(q_input_features, q_weights_flat):\n",
        "\n",
        "\n",
        "    # Reshape weights\n",
        "    q_weights = q_weights_flat.reshape(q_depth, n_qubits)\n",
        "\n",
        "    # Start from state |+> , unbiased w.r.t. |0> and |1>\n",
        "    H_layer(n_qubits)\n",
        "\n",
        "    # Embed features in the quantum node\n",
        "    RY_layer(q_input_features)\n",
        "\n",
        "    # Sequence of trainable variational layers\n",
        "    for k in range(q_depth):\n",
        "        entangling_layer(n_qubits)\n",
        "        RY_layer(q_weights[k])\n",
        "\n",
        "    # Expectation values in the Z basis\n",
        "    exp_vals = [qml.expval(qml.PauliZ(position)) for position in range(n_qubits)]\n",
        "    return tuple(exp_vals)\n"
      ],
      "metadata": {
        "id": "sT3Mg-3pCI11"
      },
      "id": "sT3Mg-3pCI11",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "class DressedQuantumNet(nn.Module):\n",
        "    \"\"\"\n",
        "    Torch module implementing the *dressed* quantum net.\n",
        "    \"\"\"\n",
        "\n",
        "    def __init__(self):\n",
        "        \"\"\"\n",
        "        Definition of the *dressed* layout.\n",
        "        \"\"\"\n",
        "\n",
        "        super().__init__()\n",
        "        self.pre_net = nn.Linear(512, n_qubits)\n",
        "        self.relu=nn.ReLU()\n",
        "        self.q_params = nn.Parameter(q_delta * torch.randn(q_depth * n_qubits))\n",
        "        self.post_net = nn.Linear(n_qubits,1)\n",
        "        self.sigmoid = nn.Sigmoid()\n",
        "\n",
        "    def forward(self, input_features):\n",
        "        \"\"\"\n",
        "        Defining how tensors are supposed to move through the *dressed* quantum\n",
        "        net.\n",
        "        \"\"\"\n",
        "\n",
        "        # obtain the input features for the quantum circuit\n",
        "        # by reducing the feature dimension from 512 to 4\n",
        "        pre_out = self.pre_net(input_features)\n",
        "        #q_in = torch.tanh(pre_out) * np.pi / 2.0\n",
        "        q_in=self.relu(pre_out)\n",
        "\n",
        "        # Apply the quantum circuit to each element of the batch and append to q_out\n",
        "        q_out = torch.Tensor(0, n_qubits)\n",
        "        q_out = q_out.to(device)\n",
        "        for elem in q_in:\n",
        "            q_out_elem = torch.hstack(quantum_net(elem, self.q_params)).float().unsqueeze(0)\n",
        "            q_out = torch.cat((q_out, q_out_elem))\n",
        "\n",
        "        # return the two-dimensional prediction from the postprocessing layer\n",
        "        out=self.post_net(q_out)\n",
        "        out = out.squeeze(1)\n",
        "        return out\n"
      ],
      "metadata": {
        "id": "JWk-TadBCJGU"
      },
      "id": "JWk-TadBCJGU",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "926b7563"
      },
      "outputs": [],
      "source": [
        "class RNN(nn.Module):\n",
        "    def __init__(self, input_size, hidden_size, num_layers, num_classes):\n",
        "        super(RNN, self).__init__()\n",
        "        self.hidden_size = hidden_size\n",
        "        self.num_layers = num_layers\n",
        "        self.bilstm1 = nn.LSTM(input_size, hidden_size, num_layers=num_layers, batch_first=True, bidirectional=True).to(device)\n",
        "        self.bilstm2 = nn.LSTM(input_size, hidden_size, num_layers=num_layers, batch_first=True, bidirectional=True).to(device)\n",
        "        self.dropout1 = nn.Dropout(0.5)\n",
        "        self.dropout2 = nn.Dropout(0.5)\n",
        "        self.Batch1= nn.BatchNorm1d(hidden_size * 2)\n",
        "        self.Batch2= nn.BatchNorm1d(hidden_size * 2)\n",
        "        self.fc1 = DressedQuantumNet()\n",
        "        \"\"\"self.fc2 = nn.Linear(512, 256)\n",
        "        self.fc3 = nn.Linear(256, 128)\n",
        "        self.fc4 = nn.Linear(128, 64)\n",
        "        self.fc5 = nn.Linear(64, 32)\n",
        "        self.fc6 = nn.Linear(32, 1)\n",
        "        self.sigmoid = nn.Sigmoid()\"\"\"\n",
        "\n",
        "    def forward(self, x):\n",
        "        h0 = torch.zeros(self.num_layers * 2, x.size(0), self.hidden_size).to(device)\n",
        "        c0 = torch.zeros(self.num_layers * 2, x.size(0), self.hidden_size).to(device)\n",
        "        out, _ = self.bilstm1(x, (h0, c0))\n",
        "\n",
        "        out = torch.cat((out[:, -1, :self.hidden_size], out[:, 0, self.hidden_size:]), dim=1)\n",
        "        out=self.Batch1(out)\n",
        "        out = self.dropout1(out)\n",
        "        h1 = torch.zeros(self.num_layers * 2, x.size(0), self.hidden_size).to(device)\n",
        "        c1 = torch.zeros(self.num_layers * 2, x.size(0), self.hidden_size).to(device)\n",
        "        out, _ = self.bilstm2(x, (h1, c1))\n",
        "        out = torch.cat((out[:, -1, :self.hidden_size], out[:, 0, self.hidden_size:]), dim=1)\n",
        "        out=self.Batch2(out)\n",
        "        out = self.dropout2(out)\n",
        "        out = torch.relu(self.fc1(out)).to(device)\n",
        "        return out\n",
        "\n",
        "        \"\"\"out = torch.relu(self.fc2(out)).to(device)\n",
        "        out = torch.relu(self.fc3(out)).to(device)\n",
        "        out = torch.relu(self.fc4(out)).to(device)\n",
        "        out = torch.relu(self.fc5(out)).to(device)\n",
        "        out = torch.relu(self.fc6(out)).to(device)\n",
        "        out=  self.sigmoid(out)\n",
        "        out = out.squeeze(1)\"\"\"\n",
        "        #return out\n"
      ],
      "id": "926b7563"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "c7d9340e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "80c212fb-2de6-4621-8253-94887df3f155"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "RNN(\n",
            "  (bilstm1): LSTM(40, 256, num_layers=3, batch_first=True, bidirectional=True)\n",
            "  (bilstm2): LSTM(40, 256, num_layers=3, batch_first=True, bidirectional=True)\n",
            "  (dropout1): Dropout(p=0.5, inplace=False)\n",
            "  (dropout2): Dropout(p=0.5, inplace=False)\n",
            "  (Batch1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "  (Batch2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "  (fc1): DressedQuantumNet(\n",
            "    (pre_net): Linear(in_features=512, out_features=4, bias=True)\n",
            "    (relu): ReLU()\n",
            "    (post_net): Linear(in_features=4, out_features=1, bias=True)\n",
            "    (sigmoid): Sigmoid()\n",
            "  )\n",
            ")\n"
          ]
        }
      ],
      "source": [
        "num_epochs = 150\n",
        "learning_rate = 0.00001\n",
        "input_size = 40\n",
        "hidden_size = 256\n",
        "num_layers = 3\n",
        "num_classes = 2\n",
        "lstm = RNN(input_size, hidden_size, num_layers, num_classes)\n",
        "lstm.to(device)\n",
        "\n",
        "print(lstm)"
      ],
      "id": "c7d9340e"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "552465b1"
      },
      "outputs": [],
      "source": [
        "criterion=nn.BCELoss()\n",
        "optimizer = torch.optim.Adam(lstm.parameters(), lr=learning_rate,weight_decay=0.001)\n"
      ],
      "id": "552465b1"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "a2726407"
      },
      "outputs": [],
      "source": [
        "import torch\n",
        "from torch.utils.data import DataLoader, TensorDataset\n",
        "train_dataset = TensorDataset(X_train, y_train)\n",
        "train_loader = DataLoader(dataset=train_dataset, batch_size=128, shuffle=True)\n",
        "test_dataset = TensorDataset(X_test, y_test)\n",
        "test_loader = DataLoader(dataset=test_dataset, batch_size=128, shuffle=True)"
      ],
      "id": "a2726407"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "58fb9a54"
      },
      "outputs": [],
      "source": [
        "num_epochs = 150\n",
        "threshold = 0.5\n",
        "tacc=[]\n",
        "tloss=[]\n",
        "vacc=[]\n",
        "vloss=[]\n",
        "\n",
        "\n",
        "for epoch in range(num_epochs):\n",
        "    lstm.train()\n",
        "    total_loss = 0\n",
        "    total_correct = 0\n",
        "    total_samples = 0\n",
        "\n",
        "    for batch_x_indices, batch_y in train_loader:\n",
        "        batch_x_indices = batch_x_indices.to(device)\n",
        "        batch_y = batch_y.to(device)\n",
        "        optimizer.zero_grad()\n",
        "        batch_x_indices = batch_x_indices.unsqueeze(1)\n",
        "        outputs = lstm(batch_x_indices)\n",
        "        loss = criterion(outputs, batch_y)\n",
        "        loss.backward()\n",
        "        optimizer.step()\n",
        "        total_loss += loss.item()\n",
        "        predicted = (outputs.data > threshold).type(torch.long)\n",
        "        total_samples += batch_y.size(0)\n",
        "        total_correct += (predicted == batch_y).sum().item()\n",
        "\n",
        "    avg_train_loss = total_loss / len(train_loader)\n",
        "    tloss.append(avg_train_loss)\n",
        "    train_accuracy = total_correct / total_samples\n",
        "    tacc.append(train_accuracy)\n",
        "    if epoch%5==0:\n",
        "        print(f\"Epoch [{epoch+1}/{num_epochs}], Training Loss: {avg_train_loss:.4f}, Training Accuracy: {train_accuracy:.2%}\")\n",
        "\n",
        "    # Validation\n",
        "    lstm.eval()\n",
        "    correct = 0\n",
        "    total = 0\n",
        "    val_loss = 0\n",
        "\n",
        "    with torch.no_grad():\n",
        "      val_loss = []\n",
        "      for batch_x_indices, batch_y in test_loader:\n",
        "\n",
        "        batch_x_indices = batch_x_indices.to(device)\n",
        "        batch_y = batch_y.to(device)\n",
        "        batch_x_indices = batch_x_indices.unsqueeze(1)\n",
        "        outputs = lstm(batch_x_indices)\n",
        "        loss = criterion(outputs, batch_y)\n",
        "\n",
        "        val_loss.append(loss.item())  # Append the loss to the list\n",
        "\n",
        "        predicted = (outputs.data > threshold).type(torch.long)\n",
        "        total += batch_y.size(0)\n",
        "        correct += (predicted == batch_y).sum().item()\n",
        "    avg_val_loss = sum(val_loss) / len(val_loss)  # Calculate average loss\n",
        "    vloss.append(avg_val_loss)\n",
        "    val_accuracy = correct / total\n",
        "    vacc.append(val_accuracy )\n",
        "    if epoch%5==0:\n",
        "        print(f\"Validation Loss: {avg_val_loss:.4f}, Validation Accuracy: {val_accuracy:.2%}\")"
      ],
      "id": "58fb9a54"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "b935352c"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "epochs=range(1,(183+1))\n",
        "plt.plot(epochs,tacc,'r',label=\"Train Acc\")\n",
        "plt.plot(epochs,vacc,'b',label=\"Val Acc\")\n",
        "plt.title(\"Training vs Validation Accuracy\")\n",
        "plt.xlabel(\"Epochs\")\n",
        "plt.ylabel(\"Accuracy\")\n",
        "plt.legend([\"Train Acc\",\"Val Acc\"])\n",
        "plt.show()"
      ],
      "id": "b935352c"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3b3a93c5"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "epochs=range(1,(183+1))\n",
        "plt.plot(epochs,tloss,'r',label=\"Train Loss\")\n",
        "plt.plot(epochs,vloss,'b',label=\"Val Loss\")\n",
        "plt.title(\"Training vs Validation Loss\")\n",
        "plt.xlabel(\"Epochs\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.legend([\"Train Loss\",\"Val Loss\"])\n",
        "plt.show()"
      ],
      "id": "3b3a93c5"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "f3d6591b"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "from sklearn.metrics import roc_curve\n",
        "from scipy.optimize import brentq\n",
        "from scipy.interpolate import interp1d\n",
        "X_test=X_test.to(device)\n",
        "X_test= X_test.unsqueeze(1)\n",
        "outputs= lstm(X_test)\n",
        "y_pred = (outputs.data > 0.5).type(torch.long)\n",
        "y_pred_cpu = y_pred.cpu()\n",
        "y_pred= y_pred_cpu.numpy()\n",
        "fpr, tpr, thresholds = roc_curve(y_test, y_pred)\n",
        "eer = brentq(lambda x : 1. - x - interp1d(fpr, tpr)(x), 0., 1.)\n",
        "print(f\"Equal Error Rate (EER): {eer:.4f}\")"
      ],
      "id": "f3d6591b"
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.4"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}